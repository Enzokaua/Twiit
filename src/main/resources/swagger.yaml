openapi: 3.0.0
info:
  title: API de Usuários e Tweets
  description: API para gerenciamento de usuários, tweets e feed de atualizações
  version: 1.0.0

servers:
  - url: 'http://XXX.XXX.XXX:XXXX'
    description: Servidor de Desenvolvimento

paths:
  /login:
    post:
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Sucesso no login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expiresIn:
                    type: integer
        '400':
          description: Requisição inválida

  /users:
    post:
      summary: Cadastro de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: Usuário criado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Token de autenticação inválido

    get:
      summary: Busca de usuários (Administrador)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    username:
                      type: string
                    password:
                      type: string
                    roles:
                      type: array
                      items:
                        type: object
                        properties:
                          idRoles:
                            type: integer
                          roleName:
                            type: string
        '403':
          description: Acesso negado, somente administrador pode buscar usuários

  /tweets:
    post:
      summary: Postar tweet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Tweet postado com sucesso
        '400':
          description: Conteúdo inválido
        '401':
          description: Token de autenticação inválido

    delete:
      summary: Deletar tweet
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Tweet deletado com sucesso
        '404':
          description: Tweet não encontrado
        '401':
          description: Token de autenticação inválido

  /feed:
    get:
      summary: Feed de atualizações
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Feed de tweets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    tweetId:
                      type: integer
                    content:
                      type: string
                    username:
                      type: string
        '401':
          description: Token de autenticação inválido

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT